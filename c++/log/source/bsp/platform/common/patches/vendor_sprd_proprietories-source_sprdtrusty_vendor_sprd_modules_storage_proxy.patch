From dc84f6a22b46516fcc84a7374802fbd47943e691 Mon Sep 17 00:00:00 2001
From: u <u@trustkernel.com>
Date: Thu, 22 Nov 2018 13:12:01 +0800
Subject: [PATCH] support trusty rpmb on androidp

Change-Id: Id5fa5295e7a97113646d0c7abd36ff5a57c61875
---
 .../vendor/sprd/modules/storage/proxy/Android.mk   | 10 +++++-
 .../vendor/sprd/modules/storage/proxy/proxy.c      | 22 +++++++++++--
 .../storage/proxy/storageproxyd_androidp_vrpmb.rc  | 38 ++++++++++++++++++++++
 3 files changed, 66 insertions(+), 4 deletions(-)
 create mode 100644 vendor/sprd/proprietories-source/sprdtrusty/vendor/sprd/modules/storage/proxy/storageproxyd_androidp_vrpmb.rc

diff --git a/vendor/sprd/proprietories-source/sprdtrusty/vendor/sprd/modules/storage/proxy/Android.mk b/vendor/sprd/proprietories-source/sprdtrusty/vendor/sprd/modules/storage/proxy/Android.mk
index 7502f99..315bf5d 100644
--- a/vendor/sprd/proprietories-source/sprdtrusty/vendor/sprd/modules/storage/proxy/Android.mk
+++ b/vendor/sprd/proprietories-source/sprdtrusty/vendor/sprd/modules/storage/proxy/Android.mk
@@ -40,8 +40,12 @@ else
 LOCAL_CFLAGS += -DCUTILS_ANDROID_FILESYSTEM_CONFIG_H
 LOCAL_PROPRIETARY_MODULE := true
 #LOCAL_MODULE_PATH :=$(TARGET_OUT_VENDOR_EXECUTABLES)
+ifeq ($(TRUSTKERNEL_TEE_SUPPORT), yes)
+LOCAL_INIT_RC := storageproxyd_androidp_vrpmb.rc
+else
 LOCAL_INIT_RC := storageproxyd_androidp.rc
 endif
+endif
 
 LOCAL_SRC_FILES := \
 	ipc.c \
@@ -50,7 +54,6 @@ LOCAL_SRC_FILES := \
 	emmc.c \
 	proxy.c
 
-
 LOCAL_SHARED_LIBRARIES := \
 	liblog \
 	libcutils
@@ -60,4 +63,9 @@ LOCAL_STATIC_LIBRARIES := \
 	libsprdtrustystorageinterface \
 	libtrusty
 
+ifeq ($(TRUSTKERNEL_TEE_SUPPORT), yes)
+LOCAL_STATIC_LIBRARIES += libvrpmb
+LOCAL_CFLAGS += -DVRPMB
+endif
+
 include $(BUILD_EXECUTABLE)
diff --git a/vendor/sprd/proprietories-source/sprdtrusty/vendor/sprd/modules/storage/proxy/proxy.c b/vendor/sprd/proprietories-source/sprdtrusty/vendor/sprd/modules/storage/proxy/proxy.c
index cfed9e5..a6009c7 100644
--- a/vendor/sprd/proprietories-source/sprdtrusty/vendor/sprd/modules/storage/proxy/proxy.c
+++ b/vendor/sprd/proprietories-source/sprdtrusty/vendor/sprd/modules/storage/proxy/proxy.c
@@ -38,7 +38,9 @@
 #include "emmc.h"
 #include "prodnv.h"
 
-
+#ifdef VRPMB
+#include <vrpmb.h>
+#endif
 
 #define SS_FS_EMMC "emmc"
 #define SS_FS_RPMB "rpmb"
@@ -201,7 +203,11 @@ static int handle_req(struct storage_msg *msg, const void *req, size_t req_len)
         break;
 
     case STORAGE_RPMB_SEND:
+    #ifdef VRPMB
+        rc = vrpmb_send(msg, req, req_len);
+    #else
         rc = rpmb_send(msg, req, req_len);
+    #endif
         break;
 
     case STORAGE_EMMC_WRITE:
@@ -459,12 +465,12 @@ int main(int argc, char *argv[])
 
 
     } else if (0 == strncmp(ss_fs, SS_FS_RPMB, sizeof(SS_FS_RPMB))) {
-
+#ifndef VRPMB
         /* open rpmb device */
         rc = rpmb_open(rpmb_devname);
         if (rc < 0)
             return EXIT_FAILURE;
-
+#endif
         /* connect to Trusty secure storage server */
         rc = ipc_connect(trusty_devname, ss_srv_name);
         if (rc < 0) {
@@ -477,6 +483,12 @@ int main(int argc, char *argv[])
              return EXIT_FAILURE;
         }
 
+#ifdef VRPMB
+        rc = vrpmb_init(ss_data_root);
+        if (rc < 0) {
+            ipc_disconnect();
+        }
+#endif
         ALOGI("start storageproxyd in fs %s\n", ss_fs);
 
         /* enter main loop */
@@ -485,7 +497,11 @@ int main(int argc, char *argv[])
         ALOGE("exiting %s proxy with status (%d)\n", ss_fs, rc);
 
         ipc_disconnect();
+#ifdef VRPMB
+        vrpmb_release();
+#else
         rpmb_close();
+#endif
 
     } else if (0 == strncmp(ss_fs, SS_FS_EMMC, sizeof(SS_FS_EMMC))) {
         //Calculate the available emmc block device 's spaces
diff --git a/vendor/sprd/proprietories-source/sprdtrusty/vendor/sprd/modules/storage/proxy/storageproxyd_androidp_vrpmb.rc b/vendor/sprd/proprietories-source/sprdtrusty/vendor/sprd/modules/storage/proxy/storageproxyd_androidp_vrpmb.rc
new file mode 100644
index 0000000..bfc6d6b
--- /dev/null
+++ b/vendor/sprd/proprietories-source/sprdtrusty/vendor/sprd/modules/storage/proxy/storageproxyd_androidp_vrpmb.rc
@@ -0,0 +1,38 @@
+#start storageproxyd must restorecon /data,
+#not start storageproxyd on cali mode (not trigger post-fs-data)
+on post-fs-data
+    mkdir /data/vendor/sprd_ss 0770 system system
+#    mkdir /productinfo/sprd_ss 0770 system system
+
+on factorytest
+    setprop vendor.sprd.storageproxyd.enabled 1
+
+#on cali mode set sprd.storageproxyd.enabled=1 in production tools
+on property:vendor.sprd.storageproxyd.enabled=1
+    mkdir /data/vendor/sprd_ss 0770 system system
+#    mkdir /productinfo/sprd_ss 0770 system system
+    start vendor.rpmbproxy
+    start vendor.nsproxy
+    start vendor.prodproxy
+#    start vendor.emmcproxy
+
+#service name must be < 16
+service vendor.rpmbproxy /vendor/bin/sprdstorageproxyd -f rpmb -d /dev/trusty-ipc-dev0 -p /mnt/vendor -r /dev/block/mmcblk0rpmb
+    class core
+    group system
+    seclabel u:r:tee:s0
+
+service vendor.nsproxy /vendor/bin/sprdstorageproxyd -f ns -d /dev/trusty-ipc-dev0 -p /data/vendor/sprd_ss -r /dev/block/mmcblk0rpmb
+    class late_start
+    group system
+    seclabel u:r:tee:s0
+
+#service vendor.prodproxy /vendor/bin/sprdstorageproxyd -f prodnv -d /dev/trusty-ipc-dev0 -p /productinfo/sprd_ss
+#    class late_start
+#    group system
+#    seclabel u:r:tee:s0
+
+#service vendor.emmcproxy /vendor/bin/sprdstorageproxyd -f emmc -d /dev/trusty-ipc-dev0
+#    class core
+#    group system
+#    seclabel u:r:tee:s0
-- 
2.7.4

